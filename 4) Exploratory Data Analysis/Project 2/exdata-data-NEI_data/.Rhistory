install.packages(c("ggplot2", "randomForest", "randomForestSRC", "rgp", "tgp"))
install.packages("devtools")
install.packages("KernSmooth")
clear
install.packages("swirl")
swirl()
install.packages("swirl")
swirl()
library("swirl")
swirl()
swirl()
5+7
x <- 5+7
x
y <- x-3
y
exit
exit()
nxt()
main()-
0
swirl()
library(swirl)
install_from_swirl("R Programming Alt")
swirl()
install_from_swirl("Data Analysis")
install_from_swirl("Mathematical Biostatistics Boot Camp")
install_from_swirl("Open Intro")
install_from_swirl("Regression Models")
install_from_swirl("Geting and Clearning Data")
install_from_swirl("Geting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
xor(!!TRUE, !!FALSE)
xor(4 >= 9, 8 != 8.0)
## Calculates the mean of a pollutant (sulfate or nitrate) across a specified list of monitors.
## The function 'pollutantmean' takes three arguments: 'directory', 'pollutant', and 'id'.
## Given a vector monitor ID numbers, 'pollutantmean' reads that monitors' particulate matter data
## from the directory specified in the 'directory' argument and returns the mean of the pollutant
## across all of the monitors, ignoring any missing values coded as NA.
pollutantmean <- function(directory, pollutant, id = 1:332) {
## Get a list of filenames
filenames <- list.files(path=directory, pattern="*.csv")
## Initialize a vector to hold values
vals <- vector()
## Loop over the passed id's
for(i in id) {
## Pad the i to create a filename
filename <- sprintf("%03d.csv", i)
filepath <- paste(directory, filename, sep="/")
## Load the data
data <- read.csv(filepath)
## Select our column
d <- data[,pollutant]
## Ignore NAs
d <- d[!is.na(d)]
## append to our vector
vals <- c(vals, d)
}
## Return the value rounded to 3 dec places
round(mean(vals), 3)
}
install.packages(c("boot", "class", "cluster", "codetools", "devtools", "KernSmooth", "manipulate", "MASS", "Matrix", "nlme", "nnet", "randomForestSRC", "Rcpp", "RMySQL", "rpart", "spatial", "XLConnect"))
n <- 10
n + 15
n <- rnorm(1)
mn
n
x <- 3
x <- c(x,3)
x
b <- c("Mehul", "Callie", "Jake", "Sofia")
b
b[3]
c <- c(T,F,T,F,T,F)
c(c==T)
c
c(c==T)
c[c==T]
x <- list(a=1:4, b=rnorm(10))
lapply(x,mean)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
x <- 1:4
lapply(x, runif)
?runif
for(i in 1:10){
print(i)
}
install.package("")
?helo
?help
help()
help.start()
install.packages(c("lattice", "latticeDensity", "latticeExtra", "LatticeKrig"))
library(datasets)
hist(airquality$Ozone)
library(datasets)
par(mfrow=c(1,2))
with(airquality, {
plot(Wind, Ozone, main="Ozone vs Wind")
plot(Solar.R, Ozone, main="Ozone vs Solar Radiation")
})
library(datasets)
par(mfrow=c(1,2))
with(airquality, {
plot(Wind, Ozone, main="Ozone vs Wind")
plot(Solar.R, Ozone, main="Ozone vs Solar Radiation")
})
library(datasets)
par(mfrow=c(1,2))
with(airquality, {
plot(Wind, Ozone, main="Ozone vs Wind")
plot(Solar.R, Ozone, main="Ozone vs Solar Radiation")
})
getwd()
setwd("/Users/Leo/Documents/Coursera")
setwd("~/Documents/Coursera/Data Science - JHU/Exploratory Data Analysis/Project 2/exdata-data-NEI_data")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
str(SCC)
View(SCC)
